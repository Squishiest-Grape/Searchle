Examples:

    Pattern:  **ion 
    Result:   union onion Orion scion anion prion Arion axion Ixion inion adion stion

    Pattern:  3-6   (the trailing wildcard can be omitted)
    Requires: 'cat'
    Result:   All 3 to 6 letter words that have the sequence 'cat' inside
  
    Pattern:  H E _ _ O
    Avoids:   L
    Result:   hermo
  
    Pattern:  10
    Requires: aa3-4c1d    
    Avoids:   b
    Result:   10 letter words with at least 2 'a's, 3 to 4 'c's, at least 1 'd', and no 'b's
      
    Pattern:  ??(aeiou)??  
    Result:   5 letter words with a vowel in the middle
    
    Pattern:  !i _ !a !t _
    Requires: iat
    Results:  5 leter words with at least 1 'i', 'a', and 't' where those leters are not in positions 1, 3, and 4 respectively
  

Requires, Avoids, and Allows are just different ways of specifying the allowable ranges for each letter's counts (excluding those specified in the pattern)
    Requires:
    - Providing no number forces that value's count to be in the range [1,inf]
    - Providing a singular number forces that value's count to be in the range [#,inf]
    - Multiple singular number inputs of the same letter sum their bounds, while ranges inputs overide
    - A letter's range must satisfy both Avoids and Allows unless overwriten by a Requires
    Avoids:
    - Providing no number forces that value's count to be in the range [0,0]
    - Providing a singular number forces that value's count to be in the range [0,#]
    Allows:
    - If Allows is empty, all letter's count are set to the range [0,inf]
    - If Allows in not empty, all unlisted letters are assumed to have the range [0,0]
    - Providing no number forces that value's count to be in the range [0,inf] 
    - Providing a singular number forces that values count to be in the range [0,#]
